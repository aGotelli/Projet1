#!/usr/bin/env python

# modules
# ROS stuff and multithreading
import rospy
import rosbag
import sys
from pyqtgraph.Qt import QtGui, QtCore
import numpy as np
import pyqtgraph as pg




if __name__ == '__main__':

    rospy.init_node('plotting')

    #QtGui.QApplication.setGraphicsSystem('raster')
    app = QtGui.QApplication([])
    #mw = QtGui.QMainWindow()
    #mw.resize(800,800)

    win = pg.GraphicsWindow(title="Basic plotting examples")
    win.resize(1000,600)
    win.setWindowTitle('pyqtgraph example: Plotting')

    # Enable antialiasing for prettier plots
    pg.setConfigOptions(antialias=True)


    x_real = []
    y_real = []

    x_odom = []
    y_odom = []

    x_estm = []
    y_estm = []

    x_m = []
    y_m = []

    bag = rosbag.Bag( sys.argv[1] )

    for topic, robot, t in bag.read_messages(topics=['/RobotPosture']):
        x_real.append(robot.position.x)
        y_real.append(robot.position.y)


    for topic, odom, t in bag.read_messages(topics=['/RobotOdometry']):
        x_odom.append(odom.pose.pose.position.x)
        y_odom.append(odom.pose.pose.position.y)

    for topic, estm, t in bag.read_messages(topics=['/EstimatedPosture']):
        x_estm.append(estm.pose.position.x)
        y_estm.append(estm.pose.position.y)

    for topic, meas, t in bag.read_messages(topics=['/Measurements']):
        x_m.append(meas.pose.position.x)
        y_m.append(meas.pose.position.y)

    bag.close()

    p1 = win.addPlot(title="Trajectory")
    p1.plot(x_real, y_real, pen=(255,0,0), name="Real path")
    p1.plot(x_odom, y_odom, pen=(0,255,0), name="Odometry path")
    p1.plot(x_estm, y_estm, pen=(0,0,255), name="Estimated path")
    p1.plot(x_m, y_m, pen=None, symbol='o')
    p1.setLabel('left', "Y Axis", units='m')
    p1.setLabel('bottom', "X Axis", units='m')
    p1.showGrid(x=True, y=True)



    QtGui.QApplication.instance().exec_()
